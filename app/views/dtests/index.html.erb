<h1><%= t(:list_test) %></h1>


<table id="dtest_index" class = "display">
  <thead>
  <tr>
    <th><%= t(:class_st) %></th>
    <th><%= t(:tem) %></th>
    <th><%= t(:test_name) %></th>
    <th></th>
    
  </tr>
  </thead>
  <tbody>

<% @dtests.each do |dtest| %>
  <tr>
    <td><%= (Dthem.find(dtest.dthem_id)).class_st %></td>
    <td><%= (Dthem.find(dtest.dthem_id)).them_text %></td>
    <td><a href="<%= dtest_dquestions_path(dtest) %>"> <%== dtest.test_name %></a> </td>
    <td>
        <% if permitted_to? :show, :dtests %>
          <%= link_to(dtest, title: t(:show)) do %> <i class="icon-search"></i> <% end %>
        <% end %>
        <% if permitted_to? :edit, :dtests %>
          <%= link_to(edit_dtest_path(dtest), title: t(:edit)) do %> <i class="icon-edit"></i> <% end %>
        <% end %>
        <% if permitted_to? :destroy, :dtests %>
          <%= link_to(dtest, method: :delete, data: { confirm: 'Are you sure?' }, title: t(:delete))  do %>
            <i class="icon-trash"></i>
          <% end %>
        <% end %>

  </td>
  </tr>
<% end %>
  </tbody>
  <tfoot class="tfoot">
  <th></th>
  <th></th>


  </tfoot>
</table>

<br />
<% if permitted_to? :new, :dtests %> 
  <%= link_to t(:n_test), new_dtest_path, class: "btn btn-large" %>
<% end %>

    <script type="text/javascript">
    (function($) {
    /*
    * Function: fnGetColumnData
    * Purpose:  Return an array of table values from a particular column.
    * Returns:  array string: 1d data array
    * Inputs:   object:oSettings - dataTable settings object. This is always the last argument past to the function
    *           int:iColumn - the id of the column to extract the data from
    *           bool:bUnique - optional - if set to false duplicated values are not filtered out
    *           bool:bFiltered - optional - if set to false all the table data is used (not only the filtered)
    *           bool:bIgnoreEmpty - optional - if set to false empty values are not filtered from the result array
    * Author:   Benedikt Forchhammer <b.forchhammer /AT\ mind2.de>
    */
    $.fn.dataTableExt.oApi.fnGetColumnData = function ( oSettings, iColumn, bUnique, bFiltered, bIgnoreEmpty ) {
    // check that we have a column id
    if ( typeof iColumn == "undefined" ) return new Array();

    // by default we only want unique data
    if ( typeof bUnique == "undefined" ) bUnique = true;

    // by default we do want to only look at filtered data
    if ( typeof bFiltered == "undefined" ) bFiltered = true;

    // by default we do not want to include empty values
    if ( typeof bIgnoreEmpty == "undefined" ) bIgnoreEmpty = true;

    // list of rows which we're going to loop through
    var aiRows;

    // use only filtered rows
    if (bFiltered == true) aiRows = oSettings.aiDisplay;
    // use all rows
    else aiRows = oSettings.aiDisplayMaster; // all row numbers

    // set up data array
    var asResultData = new Array();

    for (var i=0,c=aiRows.length; i<c; i++) {
    iRow = aiRows[i];
    var aData = this.fnGetData(iRow);
    var sValue = aData[iColumn];

    // ignore empty values?
    if (bIgnoreEmpty == true && sValue.length == 0) continue;

    // ignore unique values?
    else if (bUnique == true && jQuery.inArray(sValue, asResultData) > -1) continue;

    // else push the value onto the result data array
    else asResultData.push(sValue);
    }

    return asResultData;
    }}(jQuery));


    function fnCreateSelect( aData )
    {
    var r='<select><option value=""></option>', i, iLen=aData.length;
  for ( i=0 ; i<iLen ; i++ )
  {
  r += '<option value="'+aData[i]+'">'+aData[i]+'</option>';
  }
  return r+'</select>';
    }


    $(document).ready(function() {
    /* Initialise the DataTable */
    var oTable = $('#dtest_index').dataTable( {
    "bJQueryUI": "true",
    "oLanguage": {
    "sSearch": "Пошук"
    }
    } );

    /* Add a select menu for each TH element in the table footer */
    $("tfoot th").each( function ( i ) {
    this.innerHTML = fnCreateSelect( oTable.fnGetColumnData(i) );
    $('select', this).change( function () {
    oTable.fnFilter( $(this).val(), i );
    } );
    } );
    } );
    </script>

